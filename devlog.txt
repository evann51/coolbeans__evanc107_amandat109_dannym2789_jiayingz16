dannyM -- 2024-10-24 17:02
* Added critiques to the work document as comments
* Added README header - project name and finalized TNPG still needed!
* Added devlog
* Devlog instructions reminder (for ease of access):
Devlog allows any group member at any time to see the current state of the project.
PM will make sure devlog is being maintained, but will not make all entries.
The devlog should be a plain text file, stored in the specified location.
When any team member stops working and pushes changes to github, they should update the devlog explaining what changes have been made. Include errors/bugs discovered (or created).
Separate devlog entries with a newline.
Most recent entry at the bottom.
Each entry should begin with the following format: firstL -- TIMESTAMP\n ( e.g.: topherM -- 1999-12-31 23:59 )
* Unsure about whether the devlog is currently structured correctly

dannyM -- 2024-10-24 19:08
* Updated README header - TNPG finalized, fixed roster section
* Fixed some README formatting
* Small edit to Design Doc - corrected TNPG name

dannyM -- 2024-10-24 19:11
* MORE README format edits
* Small README launch code change

dannyM -- 2024-10-24 19:12
* Final README format edit

michelleZ -- 2024-10-27 16:30
* Revised Design Doc

dannyM -- 2024-10-29 03:42
* Added (temporary) team name, Beanware Blog, to README
* Made changes to Design Doc, primarily regarding rich text editor and keyword implementation
* Turned on "light mode" for the Site Map

michelleZ -- 2024-10-29 10:44
* Made app/__init__.py
* Activate running python file

amandaT -- 2024-10-29 10:48
* Made team flag

dannyM -- 2025-10-29 11:40
* Updated README instructions for launch code and installation + improved formatting

amandaT -- 2024-10-30 10:23
* app.py was not running before, added app.run()

evanC, amandaT, dannyM -- 2024-10-30 10:46
* clarified install guide: extracting zip from downloads
* updated launch codes: accessing paths

evanC, amandaT, dannyM -- 2024-10-31 11:15
* fixed requirements.txt, added proper functionality
* updated project description in README.md: eliminated some functionalities beyond our scope and abilities, gave more detailed descriptions of planned functionalities; project description is split between User functionality and Site Services

evanC --  2024-11-1 20:04
* started cookie and redirect work on '/' and 'login' pages, not functional yet
* added more Flask imports
* fixed __init__.py not running

michelleZ -- 2024-11-03 17:20
* Checked README and added missing instructions

amandaT -- 2024-11-04 10:31
* Updated devlog: removed collaborators table from database organization

evanC -- 2024-11-5 14:14
* / properly redirects to /login
* /login, /home, /logout, and / properly work and store cookies
* put in place cookie authentification for future pages on our site

michelleZ -- 2024-11-05 19:00-00:10
* Removed hard-coded user credentials
* Added sqlite3 codes for storing user registration info
* Added init_db(), register()
* Wrote functions for view_blog, edit_blog, create_blog
* Created and finished editing register.html
* Created logout.html
* Created 3 custom css files
* Edited login.html, home.html
* Ensure working flash messages in html

amandaT -- 2024-11-06 7:58
* Created create.html: base form
* Created create.css

amandaT, evanC, dannyM, michelleZ -- 2024-11-06 11:01
* adjusted roles in design doc: michelle in charge of databases, danny in charge of html
* fixed logout page redirection: previously unlinked to css files
* added flask warnings to create.html
* created submit button on create.html

amandaT -- 2024-11-06 18:46
* renamed design doc to design.pdf
* updated login.html to match register.html

evanC -- 2024-11-06 21:07
* homepage properly displays list of blogs with in accordance with the sqlite db
* readme now supports windows 11 and windows 10 as the virtual environment activation is different?
* adjusted button for create.html
* created html for home page, linked to sqlite databases, in progress
* wrote CSS for blog pages in home page

amandaT -- 2024-11-06 22:23
* created view.html, myblogs.html and respective css files
* created my_blogs() function

evanC -- 2024-11-07 00:03
* homepage now has edit, view, create, and logout capabilities. also displays current session for clarification of current user
* edit and post htmls made
* preset blog post and account, DevBean pw:admin. SQLIRE does not need to be newly generated, already done
* redirect back to homepage from any part of the site
* changed headings to be more consistent
* changes to README.MD to accomodate more realistic final product
* ACTIVE BUGS:
  - editting a post does not function and redirects to an invalid page (has to do with GET/POST)

dannyM -- 2024-11-07 05:06
* changed project name to 'BeanBlog' in README
* converted the CURRENT_TIMESTAMP to local time in the blogs table for the created_at column
* put the in-line styling for home.html, create.html in their respective css files
* added "register" and "login" labels to their respective html pages to avoid confusion
* changed the flash message category for username integrity error in the register function from "error" to "danger" - parity with login page's categories and styling
* also changed the flash message category for having a blank username or password in the register and login function in the same way. The flash message is actually redundant here bcause the form prevents any blank responses, but it's good to have just in case.
* deleted the in line styling for edit.html and view.html - they were unnecessary
* ?QUESTION? - do we really need code in the logout.html page? I would like to delete it since all logout does in the python file is pop the session and redirect to register
* not sure if it's necessary, but I added the scripts src to all the html pages for parity's sake. If it's unnecessary, please feel free to remove it
* better line and indentation parity for all html files
* noted the myblogs route to be unused code
* added a hidden form to edit.html - used for obtaining the post_id through POST rquest method
* fixed editing issue:
/edit/<int:post_id> route now only uses GET method
/edit has been edited to use both GET and POST
* NEW ISSUE: edits only display the time of creation, not time of editing
* Adjusted the Design Document to fit delievered product:
deleted "View and edit their own past entries"
no longer offers a "rich-text" editor, replaced with "plain text"
deleted "version control" and "search functionality" from functionalities
replaced the "categories" part from program components with "creation time", 2b
deleted 2c from program components
"edited" the component map to exclude version history and searching mechanics
deleted any other mentions of version history and searching functionalities
* updated roles in README